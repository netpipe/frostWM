AC_INIT(srlow/libsrlow/SRObject.c)

GNOPERNICUS_MAJOR_VERSION=1
GNOPERNICUS_MINOR_VERSION=0
GNOPERNICUS_MICRO_VERSION=0
GNOPERNICUS_INTERFACE_AGE=0
GNOPERNICUS_BINARY_AGE=0
GNOPERNICUS_VERSION="$GNOPERNICUS_MAJOR_VERSION.$GNOPERNICUS_MINOR_VERSION.$GNOPERNICUS_MICRO_VERSION"
AM_INIT_AUTOMAKE(gnopernicus, $GNOPERNICUS_VERSION)
AC_SUBST(GNOPERNICUS_MAJOR_VERSION)
AC_SUBST(GNOPERNICUS_MINOR_VERSION)
AC_SUBST(GNOPERNICUS_MICRO_VERSION)
AC_SUBST(GNOPERNICUS_INTERFACE_AGE)
AC_SUBST(GNOPERNICUS_BINARY_AGE)

dnl ***************************************************************************
dnl *                      libtool versioning                                 *
dnl ***************************************************************************
LT_RELEASE=$GNOPERNICUS_MAJOR_VERSION.$GNOPERNICUS_MINOR_VERSION
LT_CURRENT=`expr $GNOPERNICUS_MICRO_VERSION - $GNOPERNICUS_INTERFACE_AGE`
LT_REVISION=$GNOPERNICUS_INTERFACE_AGE
LT_AGE=`expr $GNOPERNICUS_BINARY_AGE - $GNOPERNICUS_INTERFACE_AGE`
LT_VERSION_INFO='-version-info ${LT_CURRENT}:${LT_REVISION}:${LT_AGE}'
AC_SUBST(LT_VERSION_INFO)
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

dnl ***************************************************************************
dnl *                 Specify a header configuration file                     *
dnl ***************************************************************************
AM_CONFIG_HEADER(config.h)

dnl ***************************************************************************
dnl *                     Initialize maintainer mode                          *
dnl ***************************************************************************
AM_MAINTAINER_MODE

dnl ***************************************************************************
dnl *                       Checks for programs                               *
dnl ***************************************************************************
AC_PROG_CC
AC_PROG_INSTALL
AC_ISC_POSIX

GNOME_COMMON_INIT
GNOME_COMPILE_WARNINGS(maximum)

dnl ***************************************************************************
dnl *                         Initialize libtool                              *
dnl ***************************************************************************
AM_DISABLE_STATIC
AM_PROG_LIBTOOL

dnl ***************************************************************************
dnl *                   internationalization support                          *
dnl ***************************************************************************
GETTEXT_PACKAGE=gnopernicus
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,["$GETTEXT_PACKAGE"],
  [Define the gettext package to be used])

ALL_LINGUAS="ar az be bg bn ca cs cy da de el en_CA en_GB es eu fa fi fr ga gl gu hi hr hu id it ja ko lt mn ms nb ne nl no pa pl pt pt_BR ro ru rw sk sq sr sr@Latn sv ta tr uk vi zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT

gnopernicuslocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnopernicuslocaledir)

AC_CHECK_FUNCS(bind_textdomain_codeset)

GTK_DOC_CHECK([1.0])

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AC_PROG_INTLTOOL([0.29])

dnl ***************************************************************************
dnl *		     Configuration directory related settings		      *
dnl ***************************************************************************
AC_ARG_WITH(sysconfsubdir, AC_HELP_STRING([--with-sysconfsubdir],
            [directory name used under sysconfdir, default=gnopernicus-1.0]),
            sysconfsubdir=${withval}, sysconfsubdir=gnopernicus-1.0)
if test x"${sysconfsubdir}" != x; then
    gnopernicusconfdir="${sysconfdir}/${sysconfsubdir}"
else
    gnopernicusconfdir="${sysconfdir}"
fi
AC_SUBST(gnopernicusconfdir)

dnl ***************************************************************************
dnl *				GConf related settings			      *
dnl ***************************************************************************
AM_GCONF_SOURCE_2
GCONF_CONFIG_SOURCE=

AC_ARG_ENABLE(gconf-source, [  --enable-gconf-source=sourceaddress Where to install schema files.], GCONF_CONFIG_SOURCE=$enable_gconf_source,)

if test "x$GCONF_CONFIG_SOURCE" = "x"; then
	GCONF_CONFIG_SOURCE="xml::\${sysconfdir}/gconf/gconf.xml.defaults"
fi

AC_SUBST(GCONF_CONFIG_SOURCE)

AC_MSG_CHECKING("GConf configuration source")
AC_MSG_RESULT(${GCONF_CONFIG_SOURCE})


dnl ***************************************************************************
dnl *                Let people disable the gtk-doc stuff.                    *
dnl ***************************************************************************
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc  Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no
  fi
fi

dnl NOTE: We need to use a separate automake conditional for this
dnl   	  to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

dnl **********************************************************************
dnl Check for popt version
dnl **********************************************************************

AC_CHECK_LIB(popt, poptDupArgv,,
AC_MSG_ERROR([You must have popt 1.5 or greater to compile the utilities.]))


dnl ***************************************************************************
dnl *               deal with diffrent OSs for BRAILLE (serial port)          *
dnl ***************************************************************************
AC_MSG_CHECKING([system version (for braille's serial port name)])
system=`uname -s`-`uname -r`
#if test "$status"=1 ; then
#    AC_MSG_RESULT([unknown (can't find uname command)]
#    system=unknown
#else
    #Special checks for weird systems ( MP_RAS ) :
    # uname returns weird results, and the version is kept in special file)

#    if test -r /etc/.relid -a "X`uname -n`" = "X`uname -s`" ; then
#	system=MP-RAS-`awk '{print $3}' /etc/.relid'`
#    fi

    AC_MSG_RESULT($system)
#fi
case $system in
    Linux-*)
	TTYNAME_0="/dev/ttyS0"
	TTYNAME_1="/dev/ttyS1"
	TTYNAME_2="/dev/ttyS2"
	TTYNAME_3="/dev/ttyS3"
	;;
    SunOS-*)
	TTYNAME_0="/dev/cua/a"
	TTYNAME_1="/dev/cua/b"
	TTYNAME_2="/dev/cua/c"
	TTYNAME_3="/dev/cua/d"
	;;
    FreeBSD-*)
	TTYNAME_0="/dev/cuaa0"
	TTYNAME_1="/dev/cuaa1"
	TTYNAME_2="/dev/cuaa2"
	TTYNAME_3="/dev/cuaa3"
	;;
    *)
	echo "Can't figure out the name of the serial port on this OS"
	;;
esac

AC_SUBST(TTYNAME_0)
AC_SUBST(TTYNAME_1)
AC_SUBST(TTYNAME_2)
AC_SUBST(TTYNAME_3)

dnl **********************************************************************
dnl Check for BRLTTY instalation path
dnl **********************************************************************
AC_ARG_WITH(brltty_dir, [  --with-brltty-dir=PATH Specify path to BRLTTY])

if test x$with_brltty_dir = x ; then
    if test x$prefix != x && test x$prefix != xNONE && test x$prefix != xnone ; then
	with_brltty_dir=$prefix
    else
	with_brltty_dir=/usr
    fi
fi


dnl **********************************************************************
dnl Check for BRLTTY support - api.h
dnl **********************************************************************
AC_ARG_ENABLE(brltty,
	    [AC_HELP_STRING([--enable-brltty],
			    [enable brltty support [default=auto]])],,
	    [enable_brltty=auto])

AC_MSG_CHECKING([whether to enable brltty support])

case "$enable_brltty" in
  no)
       enable_brltty=false
       AC_MSG_RESULT(no)
       ;;
  *)   enable_brltty=true
	old_CFLAGS=$CFLAGS
	old_LD_LIBRARY_PATH=$LD_LIBRARY_PATH
	old_LDFLAGS=$LDFLAGS
	CFLAGS="-I$with_brltty_dir/include"
	export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$with_brltty_dir/lib
	LDFLAGS="-L$with_brltty_dir/lib -lbrlapi"
	AC_TRY_RUN([ /* is brltty available? */
	#include <brltty/api.h>
	#include <brltty/brldefs.h>
	int main()
	{
	    brlapi_initializeConnection (NULL, NULL);
	    /*if (brlapi_initializeConnection (NULL, NULL) < 0)
    		return 0;*/
	    return 0;
	}
	]
	,dnl TRY_RUN succeded
	AC_MSG_RESULT(yes)
	, dnl TRY RUN failed
        AC_MSG_RESULT(no)
        enable_brltty=false
	, echo "Failed to find headers for brltty"
	)
	CFLAGS=$old_CFLAGS
	export LD_LIBRARY_PATH=$old_LD_LIBRARY_PATH
	LDFLAGS=$old_LDFLAGS
       ;;
esac

AM_CONDITIONAL(BUILD_BRLTTY_SUPPORT, $enable_brltty)
if test "$enable_brltty" = "true"; then
  BRLTTY_ACTIVE=-DBRLTTY_SUPPORT
  BRLTTY_INCLUDE=-I$with_brltty_dir/include
  BRLTTY_LIBRARY="-L$with_brltty_dir/lib -lbrlapi"
else
  BRLTTY_ACTIVE=
  BRLTTY_INCLUDE=
  BRLTTY_LIBRARY=
fi
AC_SUBST(BRLTTY_ACTIVE)
AC_SUBST(BRLTTY_INCLUDE)
AC_SUBST(BRLTTY_LIBRARY)

dnl ***************************************************************************
dnl *                         test for X libraries                            *
dnl ***************************************************************************

dnl test for X libraries
if test x$no_x = xyes ; then
  AC_MSG_ERROR([X development libraries not found])
else
  X_LIBS="$X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"
fi

AC_SUBST(X_LIBS)

dnl **************************************************************************
dnl *		Let font installation path option			     *
dnl **************************************************************************

AC_MSG_CHECKING([default fonts path (for braille font)])
AC_ARG_WITH(default-fonts-path,     [  --with-default-fonts-path=DIR     Set system default fonts path], 
				    default_fonts_path="$withval", default_fonts_path=yes)

case "$default_fonts_path" in
yes)
	DEFAULT_FONTS_PATH="/usr/share/fonts/default/Type1"
	;;
*)
	DEFAULT_FONTS_PATH="$default_fonts_path"
	;;
esac
AC_MSG_RESULT($DEFAULT_FONTS_PATH)
AC_SUBST(DEFAULT_FONTS_PATH)



dnl **********************************************************************
dnl Check for IPv6 support
dnl **********************************************************************

AC_MSG_CHECKING([whether to enable ipv6])
AC_ARG_ENABLE(ipv6,
[  --enable-ipv6		Enable ipv6 (with ipv4) support
  --disable-ipv6	Disable ipv6 support],
[ case "$enableval" in
  no)
       AC_MSG_RESULT(no)
       ipv6=no
       ;;
  *)   AC_MSG_RESULT(yes)
       ipv6=yes
       ;;
  esac ],

  AC_TRY_RUN([ /* is AF_INET6 available? */
#include <sys/types.h>
#include <sys/socket.h>
main()
{
 if (socket(AF_INET6, SOCK_STREAM, 0) < 0)
   exit(1);
 else
   exit(0);
}
],
  AC_MSG_RESULT(yes)
  ipv6=yes,
  AC_MSG_RESULT(no)
  ipv6=no,
  AC_MSG_RESULT(no)
  ipv6=no
))

#  CURL_CHECK_WORKING_GETADDRINFO
if test "$ipv6" = "yes"; then
  INET6_ACTIVE=-DINET6
else
  INET6_ACTIVE=
fi
AC_SUBST(INET6_ACTIVE)




dnl ***************************************************************************
dnl *        Let enable/disable paranoia option (logging warnings/errors).    *
dnl ***************************************************************************
AC_ARG_ENABLE(paranoia,
	    [AC_HELP_STRING([--enable-paranoia],
			    [turn on paranoia logging [default=no]])],,
	    [enable_paranoia=no])
	    
AC_MSG_CHECKING([whether to enable paranoia option])
if test "x$enable_paranoia" = "xyes"; then
    AC_DEFINE(ENABLE_PARANOIA, 1, [Whethever to enable paranoia option])
    AC_SUBST(ENABLE_PARANOIA)
    AC_MSG_RESULT([yes])
else
    AC_MSG_RESULT([no])
fi

dnl ***************************************************************************
dnl *        Let enable/disable magnifier support.			      *
dnl ***************************************************************************
AC_ARG_ENABLE(magnifier,
	    [AC_HELP_STRING([--enable-magnifier],
			    [turn on magnifier support [default=yes]])],,
	    [enable_magnifier=yes])

AC_MSG_CHECKING([whether to enable magnifier support])
if test "x$enable_magnifier" = "xyes"; then
    AC_MSG_RESULT([yes])
else
    AC_MSG_RESULT([no])
fi

if test "x$enable_magnifier" = "xyes"; then
    magnifier=true
else
    magnifier=false
fi

dnl ***************************************************************************
dnl *        Let enable/disable debug support.				      *
dnl ***************************************************************************
AC_ARG_ENABLE(debug,
	    [AC_HELP_STRING([--enable-debug],
			    [turn on debug support [default=no]])],,
	    [enable_debug=no])

AC_MSG_CHECKING([whether to enable debug support])
if test "x$enable_debug" = "xyes"; then
    AC_MSG_RESULT([yes])
else
    AC_MSG_RESULT([no])
fi

if test "x$enable_debug" = "xyes"; then
    AC_DEFINE(SRU_DEBUG, 1, [debug support is on])
fi

dnl ***************************************************************************
dnl *                     Versions of the libraries requiered                 *
dnl ***************************************************************************
GLIB_REQUIRED=2.4.1
LIBXML_REQUIRED=2.6.7
CSPI_REQUIRED=1.5.4
GTK_REQUIRED=2.4.1
GCONF_REQUIRED=2.6.1
LIBGLADE_REQUIRED=2.3.6
LIBGNOME_REQUIRED=2.6.0
LIBGNOMEUI_REQUIRED=2.6.1
BONOBO_REQUIRED=2.6.1
GNOME_SPEECH_REQUIRED=0.3.5
GNOME_MAG_REQUIRED=0.11.7
dnl ***************************************************************************
dnl *                       Checks for libraries                              *
dnl ***************************************************************************

dnl +-------------------------------------------------------------------------+
dnl |                       	   braille                                    |
dnl +-------------------------------------------------------------------------+
PKG_CHECK_MODULES(LIBBRL, \
		  gconf-2.0 >= $GCONF_REQUIRED \
		  gtk+-2.0 >= $GTK_REQUIRED \
		  glib-2.0 >= $GLIB_REQUIRED \
		  libgnome-2.0 >= $LIBGNOME_REQUIRED \
		  libxml-2.0 >= $LIBXML_REQUIRED)
AC_SUBST(LIBBRL_LIBS)
AC_SUBST(LIBBRL_CFLAGS)

PKG_CHECK_MODULES(LIBBRL_TEST, \
		  gconf-2.0 >= $GCONF_REQUIRED \
		  glib-2.0 >= $GLIB_REQUIRED \
		  libgnome-2.0 >= $LIBGNOME_REQUIRED \
		  libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED \
		  libxml-2.0 >= $LIBXML_REQUIRED )
AC_SUBST(LIBBRL_TEST_LIBS)
AC_SUBST(LIBBRL_TEST_CFLAGS)

dnl +-------------------------------------------------------------------------+
dnl |                              magnifier                                  |
dnl +-------------------------------------------------------------------------+

if $magnifier; then
    PKG_CHECK_MODULES(LIBMAG, \
		   gconf-2.0 >= $GCONF_REQUIRED \
		   libxml-2.0 >= $LIBXML_REQUIRED \
		   gnome-mag-1.0 >= $GNOME_MAG_REQUIRED)
else
    PKG_CHECK_MODULES(LIBMAG, \
		  glib-2.0 >= $GLIB_REQUIRED)
fi

AC_SUBST(LIBMAG_LIBS)
AC_SUBST(LIBMAG_CFLAGS)

AM_CONDITIONAL(BUILD_MAGNIFIER, $magnifier)
dnl +-------------------------------------------------------------------------+
dnl |                       	   speech                                     |
dnl +-------------------------------------------------------------------------+
PKG_CHECK_MODULES(LIBSRS, \
		  libgnome-2.0 >= $LIBGNOME_REQUIRED \
		  gconf-2.0 >= $GCONF_REQUIRED \
		  glib-2.0 >= $GLIB_REQUIRED  \
		  libxml-2.0 >= $LIBXML_REQUIRED \
		  gnome-speech-1.0 >= $GNOME_SPEECH_REQUIRED)
AC_SUBST(LIBSRS_LIBS)
AC_SUBST(LIBSRS_CFLAGS)

dnl +-------------------------------------------------------------------------+
dnl |                                srlow                                    |
dnl +-------------------------------------------------------------------------+
PKG_CHECK_MODULES(LIBSRLOW, \
		  gtk+-2.0 >= $GTK_REQUIRED \
		  cspi-1.0 >= $CSPI_REQUIRED)
AC_SUBST(LIBSRLOW_LIBS)
AC_SUBST(LIBSRLOW_CFLAGS)

PKG_CHECK_MODULES(LIBSRLOW_TEST, \
		  gtk+-2.0 >= $GTK_REQUIRED \
		  cspi-1.0 >= $CSPI_REQUIRED)
AC_SUBST(LIBSRLOW_TEST_LIBS)
AC_SUBST(LIBSRLOW_TEST_CFLAGS)

dnl +-------------------------------------------------------------------------+
dnl |                       	   srcore                                     |
dnl +-------------------------------------------------------------------------+
PKG_CHECK_MODULES(SRCORE, \
		  glib-2.0 >= $GLIB_REQUIRED \
		  libxml-2.0 >= $LIBXML_REQUIRED \
		  libgnome-2.0 >= $LIBGNOME_REQUIRED \
		  libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED)
AC_SUBST(SRCORE_LIBS)
AC_SUBST(SRCORE_CFLAGS)

dnl +-------------------------------------------------------------------------+
dnl |                       	   gnopi                                      |
dnl +-------------------------------------------------------------------------+
PKG_CHECK_MODULES(GNOPI, \
		  libgnome-2.0 >= $LIBGNOME_REQUIRED \
		  gtk+-2.0 >= $GTK_REQUIRED \
		  libglade-2.0 >= $LIBGLADE_REQUIRED \
		  libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED)
AC_SUBST(GNOPI_LIBS)
AC_SUBST(GNOPI_CFLAGS)

dnl +-------------------------------------------------------------------------+
dnl |                       	   brlmon                                     |
dnl +-------------------------------------------------------------------------+
PKG_CHECK_MODULES(BRLMON,\
		  libgnome-2.0 >= $LIBGNOME_REQUIRED \
		  gtk+-2.0 >= $GTK_REQUIRED \
		  libxml-2.0 >= $LIBXML_REQUIRED\
		  libglade-2.0 >= $LIBGLADE_REQUIRED \
		  libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED)
AC_SUBST(BRLMON_LIBS)
AC_SUBST(BRLMON_CFLAGS)

dnl +-------------------------------------------------------------------------+
dnl |                                srconf                                   |
dnl +-------------------------------------------------------------------------+
PKG_CHECK_MODULES(LIBSRCONF, \
		  gconf-2.0 >= $GCONF_REQUIRED \
		  glib-2.0 >= $GLIB_REQUIRED \
		  libgnome-2.0 >= $LIBGNOME_REQUIRED \
		  cspi-1.0 >= $CSPI_REQUIRED )
AC_SUBST(LIBSRCONF_LIBS)
AC_SUBST(LIBSRCONF_CFLAGS)

PKG_CHECK_MODULES(LIBSRCONF_TEST, \
		  gtk+-2.0 >= $GTK_REQUIRED \
		  gconf-2.0 >= $GCONF_REQUIRED \
		  glib-2.0 >= $GLIB_REQUIRED \
		  cspi-1.0 >= $CSPI_REQUIRED )
AC_SUBST(LIBSRCONF_TEST_LIBS)
AC_SUBST(LIBSRCONF_TEST_CFLAGS)

dnl +-------------------------------------------------------------------------+
dnl |                       	   kbd_mouse                                  |
dnl +-------------------------------------------------------------------------+
PKG_CHECK_MODULES(LIBKE, \
		  cspi-1.0 >= $CSPI_REQUIRED \
		  gconf-2.0 >= $GCONF_REQUIRED \
		  glib-2.0 >= $GLIB_REQUIRED )
AC_SUBST(LIBKE_LIBS)
AC_SUBST(LIBKE_CFLAGS)

dnl +-------------------------------------------------------------------------+
dnl |                       	     srutil                                   |
dnl +-------------------------------------------------------------------------+
PKG_CHECK_MODULES(LIBSRUTIL, \
		  glib-2.0 >= $GLIB_REQUIRED  \
		  cspi-1.0 >= $CSPI_REQUIRED \
		  libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED)
AC_SUBST(LIBSRUTIL_LIBS)
AC_SUBST(LIBSRUTIL_CFLAGS)


AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)



AC_OUTPUT([
Makefile
gnopernicus-1.0.pc
gnopernicus-1.0.spec
gnopi/Makefile
gnopi/gnopi_files/Makefile
gnopi/gnopi_files/Braille_Settings/Makefile
gnopi/gnopi_files/General_Settings/Makefile
gnopi/gnopi_files/Keyboard_Mouse_Settings/Makefile
gnopi/gnopi_files/Load_Default/Makefile
gnopi/gnopi_files/Magnifier_Settings/Makefile
gnopi/gnopi_files/Presentation/Makefile
gnopi/gnopi_files/Speech_Settings/Makefile
gnopi/gnopi_files/User_Properties/Makefile
gnopi/gnopi_files/Find/Makefile
gnopi/gnopi_files/Language/Makefile
gnopi/gnopi_files/Screen_Review/Makefile
gnopi/gnopi_files/Braille_Monitor_Settings/Makefile
brlmon/Makefile
braille/libbrl/Makefile
braille/test/Makefile
braille/Makefile
speech/libsrs/Makefile
speech/test/Makefile
speech/Makefile
magnifier/libmag/Makefile
magnifier/test/Makefile
magnifier/Makefile
srlow/Makefile
srlow/libsrlow/Makefile
srlow/test/Makefile
srcore/Makefile
srconf/libsrconf/Makefile
srconf/test/Makefile
srconf/Makefile
srutil/Makefile
kbd_mouse/Makefile
kbd_mouse/libke/Makefile
kbd_mouse/test/Makefile
schemas/Makefile
po/Makefile.in
help/Makefile
help/gnopernicus/Makefile
help/gnopernicus/C/Makefile
help/gnopernicus/es/Makefile
help/braille_monitor/Makefile
help/braille_monitor/C/Makefile
help/braille_monitor/es/Makefile
])

echo "gnopernicus setup:

	Source code location:	${srcdir}
	Compiler:		${CC} 
	Prefix:			${prefix}

	Welcome to Gnopernicus.
	   http://www.baum.ro/gnopernicus.html
"
